load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "go_default_library",
    srcs = [
        "apply.go",
        "apply_auth.go",
        "apply_v2.go",
        "backend.go",
        "cluster_util.go",
        "config.go",
        "consistent_index.go",
        "corrupt.go",
        "doc.go",
        "errors.go",
        "metrics.go",
        "quota.go",
        "raft.go",
        "server.go",
        "server_access_control.go",
        "snapshot_merge.go",
        "storage.go",
        "util.go",
        "v2_server.go",
        "v3_server.go",
    ],
    importmap = "k8s.io/kubernetes/vendor/go.etcd.io/etcd/etcdserver",
    importpath = "go.etcd.io/etcd/etcdserver",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/coreos/go-semver/semver:go_default_library",
        "//vendor/github.com/coreos/pkg/capnslog:go_default_library",
        "//vendor/github.com/dustin/go-humanize:go_default_library",
        "//vendor/github.com/gogo/protobuf/proto:go_default_library",
        "//vendor/github.com/golang/protobuf/proto:go_default_library",
        "//vendor/github.com/prometheus/client_golang/prometheus:go_default_library",
        "//vendor/go.etcd.io/bbolt:go_default_library",
        "//vendor/go.etcd.io/etcd/auth:go_default_library",
        "//vendor/go.etcd.io/etcd/etcdserver/api:go_default_library",
        "//vendor/go.etcd.io/etcd/etcdserver/api/membership:go_default_library",
        "//vendor/go.etcd.io/etcd/etcdserver/api/rafthttp:go_default_library",
        "//vendor/go.etcd.io/etcd/etcdserver/api/snap:go_default_library",
        "//vendor/go.etcd.io/etcd/etcdserver/api/v2discovery:go_default_library",
        "//vendor/go.etcd.io/etcd/etcdserver/api/v2http/httptypes:go_default_library",
        "//vendor/go.etcd.io/etcd/etcdserver/api/v2stats:go_default_library",
        "//vendor/go.etcd.io/etcd/etcdserver/api/v2store:go_default_library",
        "//vendor/go.etcd.io/etcd/etcdserver/api/v3alarm:go_default_library",
        "//vendor/go.etcd.io/etcd/etcdserver/api/v3compactor:go_default_library",
        "//vendor/go.etcd.io/etcd/etcdserver/api/v3rpc/rpctypes:go_default_library",
        "//vendor/go.etcd.io/etcd/etcdserver/etcdserverpb:go_default_library",
        "//vendor/go.etcd.io/etcd/lease:go_default_library",
        "//vendor/go.etcd.io/etcd/lease/leasehttp:go_default_library",
        "//vendor/go.etcd.io/etcd/mvcc:go_default_library",
        "//vendor/go.etcd.io/etcd/mvcc/backend:go_default_library",
        "//vendor/go.etcd.io/etcd/mvcc/mvccpb:go_default_library",
        "//vendor/go.etcd.io/etcd/pkg/contention:go_default_library",
        "//vendor/go.etcd.io/etcd/pkg/fileutil:go_default_library",
        "//vendor/go.etcd.io/etcd/pkg/idutil:go_default_library",
        "//vendor/go.etcd.io/etcd/pkg/logutil:go_default_library",
        "//vendor/go.etcd.io/etcd/pkg/netutil:go_default_library",
        "//vendor/go.etcd.io/etcd/pkg/pbutil:go_default_library",
        "//vendor/go.etcd.io/etcd/pkg/runtime:go_default_library",
        "//vendor/go.etcd.io/etcd/pkg/schedule:go_default_library",
        "//vendor/go.etcd.io/etcd/pkg/traceutil:go_default_library",
        "//vendor/go.etcd.io/etcd/pkg/transport:go_default_library",
        "//vendor/go.etcd.io/etcd/pkg/types:go_default_library",
        "//vendor/go.etcd.io/etcd/pkg/wait:go_default_library",
        "//vendor/go.etcd.io/etcd/raft:go_default_library",
        "//vendor/go.etcd.io/etcd/raft/raftpb:go_default_library",
        "//vendor/go.etcd.io/etcd/version:go_default_library",
        "//vendor/go.etcd.io/etcd/wal:go_default_library",
        "//vendor/go.etcd.io/etcd/wal/walpb:go_default_library",
        "//vendor/go.uber.org/zap:go_default_library",
        "//vendor/go.uber.org/zap/zapcore:go_default_library",
    ],
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [
        ":package-srcs",
        "//vendor/go.etcd.io/etcd/etcdserver/api:all-srcs",
        "//vendor/go.etcd.io/etcd/etcdserver/etcdserverpb:all-srcs",
    ],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)

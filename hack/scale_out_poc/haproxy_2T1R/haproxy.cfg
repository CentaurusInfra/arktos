global
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
        stats timeout 30s
        user haproxy
        group haproxy
        daemon

        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

        # Default ciphers to use on SSL-enabled listening sockets.
        # For more information, see ciphers(1SSL). This list is from:
        #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
        # An alternative list with additional directives can be obtained from
        #  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
        ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
        ssl-default-bind-options no-sslv3

defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        timeout connect 5000
        timeout client  {{ connection_timeout }}
        timeout server  {{ connection_timeout }}
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http

frontend scale-out-proxy
    bind *:8888 alpn h2,http/1.1

    acl tp_one_request_1 path_reg ^/apis/([^/])*/([^/])*/tenants/(?!system|all)([a-m]([^/])*)/.*$
    acl tp_one_request_2 path_reg ^/api/([^/])*/(?!system|all)([a-m]([^/])*)/.*$

    acl tp_two_request_1 path_reg ^/apis/([^/])*/([^/])*/tenants/(?!system|all)([n-z]([^/])*)/.*$
    acl tp_two_request_2 path_reg ^/api/([^/])*/tenants/(?!system|all)([n-z]([^/])*)/.*$

    acl node_request path_reg ^/api/([^/])*/nodes.*$
    acl lease_request path_reg ^/apis/coordination.k8s.io/([^/])*/leases.*$
    acl individual_lease_request path_reg ^/apis/([^/])*/([^/])*/tenants/system/namespaces/kube-node-lease/leases.*$

    acl from_tenant_api_one src {{ tenant_partition_one_ip }}
    acl from_tenant_api_two src {{ tenant_partition_two_ip }}
    acl from_resource_api src {{ resource_partition_ip }}

    # Note: the order of backend search rules matters. The first matching rule will be used. 
    use_backend resource_api if node_request OR lease_request OR individual_lease_request
    use_backend tenant_api_one if tp_one_request_1 OR tp_one_request_2    
    use_backend tenant_api_two if tp_two_request_1 OR tp_two_request_2

    use_backend tenant_api_one if from_tenant_api_one
    use_backend tenant_api_two if from_tenant_api_two
    use_backend resource_api if from_resource_api
    
    default_backend tenant_api_one

backend tenant_api_one
    server tp_one {{ tenant_partition_one_ip }}:{{ arktos_api_port }} maxconn 2048

backend tenant_api_two
    server tp_two {{ tenant_partition_two_ip }}:{{ arktos_api_port }} maxconn 2048

backend resource_api
    server rp {{ resource_partition_ip }}:{{ arktos_api_port }} maxconn 2048
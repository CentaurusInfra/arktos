global
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
        stats timeout 30s
        maxconn 2000000
        user haproxy
        group haproxy
        daemon

        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

        # Default ciphers to use on SSL-enabled listening sockets.
        # For more information, see ciphers(1SSL). This list is from:
        #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
        # An alternative list with additional directives can be obtained from
        #  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
        ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
        ssl-default-bind-options no-sslv3
        nbproc 32
        cpu-map 1 0 
        cpu-map 2 1
        cpu-map 3 2 
        cpu-map 4 3
        cpu-map 5 4 
        cpu-map 6 5 
        cpu-map 7 6
        cpu-map 8 7 
        cpu-map 9 8
        cpu-map 10 9 
        cpu-map 11 10
        cpu-map 12 11
        cpu-map 13 12 
        cpu-map 14 13
        cpu-map 15 14 
        cpu-map 16 15
        cpu-map 17 16
        cpu-map 18 17 
        cpu-map 19 18
        cpu-map 20 19 
        cpu-map 21 20
        cpu-map 22 21
        cpu-map 23 22 
        cpu-map 24 23
        cpu-map 25 24 
        cpu-map 26 25
        cpu-map 27 26
        cpu-map 28 27 
        cpu-map 29 28
        cpu-map 30 29 
        cpu-map 31 30
        cpu-map 32 31
        stats bind-process 32
        

defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        retries 3
        maxconn 2000000
        timeout connect 5000
        timeout client  {{ connection_timeout }}
        timeout server  {{ connection_timeout }}
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http

frontend scale-out-proxy
    bind *:{{ proxy_port }} alpn h2,http/1.1

    acl tp_one_request_2 path_reg ^/api/[a-z0-9_.-]+/tenants/(?!(system$|system/.*$|all$|all/.*$))([a-m].*)$
    acl tp_one_request_1 path_reg ^/apis/[a-z0-9_.-]+/[a-z0-9_.-]+/tenants/(?!(system$|system/.*$|all$|all/.*$))([a-m].*)$
    
    acl tp_two_request_2 path_reg ^/api/[a-z0-9_.-]+/tenants/(?!(system$|system/.*$|all$|all/.*$))([n-z].*)$
    acl tp_two_request_1 path_reg ^/apis/[a-z0-9_.-]+/[a-z0-9_.-]+/tenants/(?!(system$|system/.*$|all$|all/.*$))([n-z].*)$
    

    acl node_request path_reg ^/api/[a-z0-9_.-]+/nodes.*$
    acl lease_request path_reg ^/apis/coordination.k8s.io/[a-z0-9_.-]+/leases.*$
    acl individual_lease_request path_reg ^/apis/[a-z0-9_.-]+/[a-z0-9_.-]+/tenants/system/namespaces/kube-node-lease/leases.*$

    acl from_tenant_api_one src {{ tenant_partition_one_ip }}
    acl from_tenant_api_two src {{ tenant_partition_two_ip }}
    acl from_resource_api src {{ resource_partition_ip }}

    # Note: the order of backend search rules matters. The first matching rule will be used. 
    use_backend resource_api if node_request OR lease_request OR individual_lease_request
    use_backend tenant_api_one if tp_one_request_1 OR tp_one_request_2    
    use_backend tenant_api_two if tp_two_request_1 OR tp_two_request_2

    use_backend tenant_api_one if from_tenant_api_one
    use_backend tenant_api_two if from_tenant_api_two
    use_backend resource_api if from_resource_api
    
    default_backend tenant_api_one

backend tenant_api_one
    server tp_one {{ tenant_partition_one_ip }}:{{ arktos_api_port }} maxconn 500000

backend tenant_api_two
    server tp_two {{ tenant_partition_two_ip }}:{{ arktos_api_port }} maxconn 500000

backend resource_api
    server rp {{ resource_partition_ip }}:{{ arktos_api_port }} maxconn 500000
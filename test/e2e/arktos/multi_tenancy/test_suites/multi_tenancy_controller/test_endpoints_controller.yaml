#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Endpoints Controller Tests ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# This test suite verifies the multi-tenancy endpoints controller. 
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

###########################################################################################################
# test variables
###########################################################################################################
Variables:
  test_ns: random_8
  test_tenant: random_8

###########################################################################################################
# test setup
###########################################################################################################
Tests:
  - BeforeTestMessage: Test setup ....
    Command: ${kubectl} create tenant ${test_tenant}
    OutputShouldContain: 
    - "\ntenant/${test_tenant} created\n"

  - Command: ${kubectl} create ns ${test_ns} --tenant ${test_tenant} 
    OutputShouldBe: "namespace/${test_ns} created\n"

###########################################################################################################
# Testing endpoints controller
###########################################################################################################
# ------------------------------------------------------------
# endpoints will be created when a service is exposed
# ------------------------------------------------------------
  - BeforeTestMessage: Verifying endpoints will be created when a service is exposed ...
    Command: ${kubectl} apply -f ${test_data_dir}/sample-deployment.yaml --namespace ${test_ns} --tenant ${test_tenant} 
    OutputShouldBe: "deployment.apps/sample-nginx-deployment created\n"

  - Command: ${kubectl} expose deployment sample-nginx-deployment --port=80 --target-port=8080 --namespace ${test_ns}  --tenant ${test_tenant}
    OutputShouldBe: "service/sample-nginx-deployment exposed\n"

  - Command: "${kubectl} get service sample-nginx-deployment --namespace ${test_ns} --tenant ${test_tenant} -o json 
              | jq -r '[.metadata.name, .metadata.namespace, .metadata.tenant, .spec.ports[0].port, .spec.ports[0].targetPort] | @tsv'"
    OutputShouldBe: "sample-nginx-deployment	${test_ns}	${test_tenant}	80	8080\n"

  - Command: "${kubectl} get endpoints sample-nginx-deployment --namespace ${test_ns} --tenant ${test_tenant}  -o json 
              | jq -r '[.metadata.name, .metadata.namespace, .metadata.tenant] | @tsv'"
    OutputShouldBe: "sample-nginx-deployment	${test_ns}	${test_tenant}\n"

# ------------------------------------------------------------
# endpoints will be deleted when the service is deleted
# ------------------------------------------------------------
  - BeforeTestMessage: Verifying endpoints will be deleted when the service is deleted ...
    Command: ${kubectl} delete service sample-nginx-deployment  --namespace ${test_ns}  --tenant ${test_tenant}
    OutputShouldBe: "service \"sample-nginx-deployment\" deleted\n"

  - Command: ${kubectl} get service sample-nginx-deployment  --namespace ${test_ns}  --tenant ${test_tenant}
    ShouldFail: true
    OutputShouldBe: "Error from server (NotFound): services \"sample-nginx-deployment\" not found\n"

  - Command: ${kubectl} get endpoints sample-nginx-deployment  --namespace ${test_ns}  --tenant ${test_tenant}
    ShouldFail: true
    OutputShouldBe: "Error from server (NotFound): endpoints \"sample-nginx-deployment\" not found\n"

###########################################################################################################
# cleanup
######################################################################################################
  - BeforeTestMessage: Clean up...
    Command: ${kubectl} delete tenant ${test_tenant} > dev/null 2>&1 &
